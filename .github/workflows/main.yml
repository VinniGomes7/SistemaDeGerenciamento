name: CI
on: 
  push:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        ports: 
          - 5432:5432
        options: >-
          --health-cmd pg_isready -h localhost -p 5432
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        env:
          POSTGRES_DB: SistemaDeGerenciamento_test  # Nome do banco de dados de teste
          POSTGRES_USER: postgres  # O usuário do Postgres
          POSTGRES_PASSWORD: adm123  # A senha do Postgres

    steps:
      - name: Checkout do Repositório
        uses: actions/checkout@v3

      - name: Configurar Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1.2

      - name: Instalar cliente PostgreSQL
        run: |
          sudo apt-get update
          sudo apt-get install -y libpq-dev

      - name: Cache de Gems do Ruby
        uses: actions/cache@v3
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Instalação do Bundle
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Aguardar pelo Postgres
        run: |
          for i in {1..30}; do
            if pg_isready -h localhost -p 5432 -U postgres; then
              echo "Postgres está pronto!"
              break
            fi
            echo "Aguardando pelo Postgres..."
            sleep 2
          done

      - name: Executar Testes
        env:
          PG_DATABASE: SistemaDeGerenciamento_test  # Nome do banco de dados de teste
          PG_HOST: localhost
          PG_USER: postgres  # O usuário deve ser postgres
          PG_PASSWORD: adm123  # Use a mesma senha definida
          RAILS_ENV: test  # Altere para 'test'
          RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}  # Certifique-se de que isso esteja definido nos Secrets do repositório
          WITH_COVERAGE: true
          DISABLE_SPRING: 1
        run: |
          bundle exec rails db:create  # Criação do banco de dados de teste
          bundle exec rails db:migrate  # Migrações para o banco de dados de teste
          bundle exec rails test  # Executa os testes